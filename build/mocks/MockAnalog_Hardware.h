/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCKANALOG_HARDWARE_H
#define _MOCKANALOG_HARDWARE_H

#include "unity.h"
#include "stdint.h"
#include "Defs.h"
#include "LPC1768.h"
#include "Analog_Hardware.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void MockAnalog_Hardware_Init(void);
void MockAnalog_Hardware_Destroy(void);
void MockAnalog_Hardware_Verify(void);




#define Analog_Hardware_Init_Ignore() Analog_Hardware_Init_CMockIgnore()
void Analog_Hardware_Init_CMockIgnore(void);
#define Analog_Hardware_Init_StopIgnore() Analog_Hardware_Init_CMockStopIgnore()
void Analog_Hardware_Init_CMockStopIgnore(void);
#define Analog_Hardware_Init_Expect() Analog_Hardware_Init_CMockExpect(__LINE__)
void Analog_Hardware_Init_CMockExpect(UNITY_LINE_TYPE cmock_line);
#define Analog_Hardware_IsReady_IgnoreAndReturn(cmock_retval) Analog_Hardware_IsReady_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void Analog_Hardware_IsReady_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, AnalogReadingState_t cmock_to_return);
#define Analog_Hardware_IsReady_StopIgnore() Analog_Hardware_IsReady_CMockStopIgnore()
void Analog_Hardware_IsReady_CMockStopIgnore(void);
#define Analog_Hardware_IsReady_ExpectAndReturn(chanal, cmock_retval) Analog_Hardware_IsReady_CMockExpectAndReturn(__LINE__, chanal, cmock_retval)
void Analog_Hardware_IsReady_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, char chanal, AnalogReadingState_t cmock_to_return);
#define Analog_Hardwar_getReading_IgnoreAndReturn(cmock_retval) Analog_Hardwar_getReading_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void Analog_Hardwar_getReading_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint16_t cmock_to_return);
#define Analog_Hardwar_getReading_StopIgnore() Analog_Hardwar_getReading_CMockStopIgnore()
void Analog_Hardwar_getReading_CMockStopIgnore(void);
#define Analog_Hardwar_getReading_ExpectAndReturn(chanal, cmock_retval) Analog_Hardwar_getReading_CMockExpectAndReturn(__LINE__, chanal, cmock_retval)
void Analog_Hardwar_getReading_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t chanal, uint16_t cmock_to_return);

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
