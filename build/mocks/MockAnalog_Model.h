/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCKANALOG_MODEL_H
#define _MOCKANALOG_MODEL_H

#include "unity.h"
#include "stdint.h"
#include "Defs.h"
#include "LPC1768.h"
#include "Analog_Model.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void MockAnalog_Model_Init(void);
void MockAnalog_Model_Destroy(void);
void MockAnalog_Model_Verify(void);




#define Analog_Init_IgnoreAndReturn(cmock_retval) Analog_Init_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void Analog_Init_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, STATUS_T cmock_to_return);
#define Analog_Init_StopIgnore() Analog_Init_CMockStopIgnore()
void Analog_Init_CMockStopIgnore(void);
#define Analog_Init_ExpectAndReturn(cmock_retval) Analog_Init_CMockExpectAndReturn(__LINE__, cmock_retval)
void Analog_Init_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, STATUS_T cmock_to_return);
#define Analog_Read_IgnoreAndReturn(cmock_retval) Analog_Read_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void Analog_Read_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, STATUS_T cmock_to_return);
#define Analog_Read_StopIgnore() Analog_Read_CMockStopIgnore()
void Analog_Read_CMockStopIgnore(void);
#define Analog_Read_ExpectAndReturn(num, cmock_retval) Analog_Read_CMockExpectAndReturn(__LINE__, num, cmock_retval)
void Analog_Read_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, analog_chanal_t num, STATUS_T cmock_to_return);
#define Analog_AddReading_IgnoreAndReturn(cmock_retval) Analog_AddReading_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void Analog_AddReading_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, STATUS_T cmock_to_return);
#define Analog_AddReading_StopIgnore() Analog_AddReading_CMockStopIgnore()
void Analog_AddReading_CMockStopIgnore(void);
#define Analog_AddReading_ExpectAndReturn(chanal, value, cmock_retval) Analog_AddReading_CMockExpectAndReturn(__LINE__, chanal, value, cmock_retval)
void Analog_AddReading_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t chanal, uint16_t value, STATUS_T cmock_to_return);

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
